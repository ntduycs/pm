// Code generated by ent, DO NOT EDIT.

package papctechnicalscore

import (
	"project-management/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLTE(FieldID, id))
}

// PaPcID applies equality check predicate on the "pa_pc_id" field. It's identical to PaPcIDEQ.
func PaPcID(v int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldPaPcID, v))
}

// Skill applies equality check predicate on the "skill" field. It's identical to SkillEQ.
func Skill(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldSkill, v))
}

// SelfScore applies equality check predicate on the "self_score" field. It's identical to SelfScoreEQ.
func SelfScore(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldSelfScore, v))
}

// PeerScore applies equality check predicate on the "peer_score" field. It's identical to PeerScoreEQ.
func PeerScore(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldPeerScore, v))
}

// ManagerScore applies equality check predicate on the "manager_score" field. It's identical to ManagerScoreEQ.
func ManagerScore(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldManagerScore, v))
}

// PaPcIDEQ applies the EQ predicate on the "pa_pc_id" field.
func PaPcIDEQ(v int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldPaPcID, v))
}

// PaPcIDNEQ applies the NEQ predicate on the "pa_pc_id" field.
func PaPcIDNEQ(v int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNEQ(FieldPaPcID, v))
}

// PaPcIDIn applies the In predicate on the "pa_pc_id" field.
func PaPcIDIn(vs ...int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldIn(FieldPaPcID, vs...))
}

// PaPcIDNotIn applies the NotIn predicate on the "pa_pc_id" field.
func PaPcIDNotIn(vs ...int) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNotIn(FieldPaPcID, vs...))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v Type) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v Type) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...Type) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...Type) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNotIn(FieldType, vs...))
}

// SkillEQ applies the EQ predicate on the "skill" field.
func SkillEQ(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldSkill, v))
}

// SkillNEQ applies the NEQ predicate on the "skill" field.
func SkillNEQ(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNEQ(FieldSkill, v))
}

// SkillIn applies the In predicate on the "skill" field.
func SkillIn(vs ...string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldIn(FieldSkill, vs...))
}

// SkillNotIn applies the NotIn predicate on the "skill" field.
func SkillNotIn(vs ...string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNotIn(FieldSkill, vs...))
}

// SkillGT applies the GT predicate on the "skill" field.
func SkillGT(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGT(FieldSkill, v))
}

// SkillGTE applies the GTE predicate on the "skill" field.
func SkillGTE(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGTE(FieldSkill, v))
}

// SkillLT applies the LT predicate on the "skill" field.
func SkillLT(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLT(FieldSkill, v))
}

// SkillLTE applies the LTE predicate on the "skill" field.
func SkillLTE(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLTE(FieldSkill, v))
}

// SkillContains applies the Contains predicate on the "skill" field.
func SkillContains(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldContains(FieldSkill, v))
}

// SkillHasPrefix applies the HasPrefix predicate on the "skill" field.
func SkillHasPrefix(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldHasPrefix(FieldSkill, v))
}

// SkillHasSuffix applies the HasSuffix predicate on the "skill" field.
func SkillHasSuffix(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldHasSuffix(FieldSkill, v))
}

// SkillEqualFold applies the EqualFold predicate on the "skill" field.
func SkillEqualFold(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEqualFold(FieldSkill, v))
}

// SkillContainsFold applies the ContainsFold predicate on the "skill" field.
func SkillContainsFold(v string) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldContainsFold(FieldSkill, v))
}

// SelfScoreEQ applies the EQ predicate on the "self_score" field.
func SelfScoreEQ(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldSelfScore, v))
}

// SelfScoreNEQ applies the NEQ predicate on the "self_score" field.
func SelfScoreNEQ(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNEQ(FieldSelfScore, v))
}

// SelfScoreIn applies the In predicate on the "self_score" field.
func SelfScoreIn(vs ...float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldIn(FieldSelfScore, vs...))
}

// SelfScoreNotIn applies the NotIn predicate on the "self_score" field.
func SelfScoreNotIn(vs ...float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNotIn(FieldSelfScore, vs...))
}

// SelfScoreGT applies the GT predicate on the "self_score" field.
func SelfScoreGT(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGT(FieldSelfScore, v))
}

// SelfScoreGTE applies the GTE predicate on the "self_score" field.
func SelfScoreGTE(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGTE(FieldSelfScore, v))
}

// SelfScoreLT applies the LT predicate on the "self_score" field.
func SelfScoreLT(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLT(FieldSelfScore, v))
}

// SelfScoreLTE applies the LTE predicate on the "self_score" field.
func SelfScoreLTE(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLTE(FieldSelfScore, v))
}

// PeerScoreEQ applies the EQ predicate on the "peer_score" field.
func PeerScoreEQ(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldPeerScore, v))
}

// PeerScoreNEQ applies the NEQ predicate on the "peer_score" field.
func PeerScoreNEQ(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNEQ(FieldPeerScore, v))
}

// PeerScoreIn applies the In predicate on the "peer_score" field.
func PeerScoreIn(vs ...float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldIn(FieldPeerScore, vs...))
}

// PeerScoreNotIn applies the NotIn predicate on the "peer_score" field.
func PeerScoreNotIn(vs ...float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNotIn(FieldPeerScore, vs...))
}

// PeerScoreGT applies the GT predicate on the "peer_score" field.
func PeerScoreGT(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGT(FieldPeerScore, v))
}

// PeerScoreGTE applies the GTE predicate on the "peer_score" field.
func PeerScoreGTE(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGTE(FieldPeerScore, v))
}

// PeerScoreLT applies the LT predicate on the "peer_score" field.
func PeerScoreLT(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLT(FieldPeerScore, v))
}

// PeerScoreLTE applies the LTE predicate on the "peer_score" field.
func PeerScoreLTE(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLTE(FieldPeerScore, v))
}

// PeerScoreIsNil applies the IsNil predicate on the "peer_score" field.
func PeerScoreIsNil() predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldIsNull(FieldPeerScore))
}

// PeerScoreNotNil applies the NotNil predicate on the "peer_score" field.
func PeerScoreNotNil() predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNotNull(FieldPeerScore))
}

// ManagerScoreEQ applies the EQ predicate on the "manager_score" field.
func ManagerScoreEQ(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldEQ(FieldManagerScore, v))
}

// ManagerScoreNEQ applies the NEQ predicate on the "manager_score" field.
func ManagerScoreNEQ(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNEQ(FieldManagerScore, v))
}

// ManagerScoreIn applies the In predicate on the "manager_score" field.
func ManagerScoreIn(vs ...float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldIn(FieldManagerScore, vs...))
}

// ManagerScoreNotIn applies the NotIn predicate on the "manager_score" field.
func ManagerScoreNotIn(vs ...float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldNotIn(FieldManagerScore, vs...))
}

// ManagerScoreGT applies the GT predicate on the "manager_score" field.
func ManagerScoreGT(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGT(FieldManagerScore, v))
}

// ManagerScoreGTE applies the GTE predicate on the "manager_score" field.
func ManagerScoreGTE(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldGTE(FieldManagerScore, v))
}

// ManagerScoreLT applies the LT predicate on the "manager_score" field.
func ManagerScoreLT(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLT(FieldManagerScore, v))
}

// ManagerScoreLTE applies the LTE predicate on the "manager_score" field.
func ManagerScoreLTE(v float32) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.FieldLTE(FieldManagerScore, v))
}

// HasPaPc applies the HasEdge predicate on the "pa_pc" edge.
func HasPaPc() predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, PaPcTable, PaPcColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPaPcWith applies the HasEdge predicate on the "pa_pc" edge with a given conditions (other predicates).
func HasPaPcWith(preds ...predicate.PaPc) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(func(s *sql.Selector) {
		step := newPaPcStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PaPcTechnicalScore) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PaPcTechnicalScore) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PaPcTechnicalScore) predicate.PaPcTechnicalScore {
	return predicate.PaPcTechnicalScore(sql.NotPredicates(p))
}
